#!/usr/bin/python
# -*- coding: utf-8 -*-
# All tests that come with piglit, using default settings

import re
import subprocess

from framework.core import *
from framework.exectest import *
from framework.gleantest import *

######
# Collecting all tests
profile = TestProfile()

glean = Group()
glean['basic'] = GleanTest('basic')
glean['api2'] = GleanTest('api2')
glean['makeCurrent'] = GleanTest('makeCurrent')
glean['blendFunc'] = GleanTest('blendFunc')
glean['bufferObject'] = GleanTest('bufferObject')
glean['clipFlat'] = GleanTest('clipFlat')
glean['depthStencil'] = GleanTest('depthStencil')
glean['fbo'] = GleanTest('fbo')
glean['fpexceptions'] = GleanTest('fpexceptions')
glean['fragProg1'] = GleanTest('fragProg1')
glean['getString'] = GleanTest('getString')
glean['glsl1'] = GleanTest('glsl1')
glean['logicOp'] = GleanTest('logicOp')
glean['maskedClear'] = GleanTest('maskedClear')
glean['occluquery'] = GleanTest('occluQry')
glean['orthoPosRandTris'] = GleanTest('orthoPosRandTris')
glean['orthoPosRandRects'] = GleanTest('orthoPosRandRects')
glean['orthoPosTinyQuads'] = GleanTest('orthoPosTinyQuads')
glean['orthoPosHLines'] = GleanTest('orthoPosHLines')
glean['orthoPosVLines'] = GleanTest('orthoPosVLines')
glean['orthoPosPoints'] = GleanTest('orthoPosPoints')
glean['paths'] = GleanTest('paths')
glean['pbo'] = GleanTest('pbo')
glean['polygonOffset'] = GleanTest('polygonOffset')
glean['pixelFormats'] = GleanTest('pixelFormats')
glean['pointAtten'] = GleanTest('pointAtten')
glean['pointSprite'] = GleanTest('pointSprite')
glean['exactRGBA'] = GleanTest('exactRGBA')
glean['readPixSanity'] = GleanTest('readPixSanity')
glean['rgbTriStrip'] = GleanTest('rgbTriStrip')
glean['scissor'] = GleanTest('scissor')
glean['shaderAPI'] = GleanTest('shaderAPI')
glean['stencil2'] = GleanTest('stencil2')
glean['teapot'] = GleanTest('teapot')
glean['texCombine'] = GleanTest('texCombine')
glean['texCube'] = GleanTest('texCube')
glean['texEnv'] = GleanTest('texEnv')
glean['texgen'] = GleanTest('texgen')
glean['texRect'] = GleanTest('texRect')
glean['texCombine4'] = GleanTest('texCombine4')
glean['texSwizzle'] = GleanTest('texSwizzle')
glean['texture_srgb'] = GleanTest('texture_srgb')
glean['texUnits'] = GleanTest('texUnits')
glean['vertArrayBGRA'] = GleanTest('vertArrayBGRA')
glean['vertattrib'] = GleanTest('vertattrib')
glean['vertProg1'] = GleanTest('vertProg1')

mesa = Group()
add_plain_test(mesa, 'crossbar')

fbo = Group()
add_plain_test(fbo, 'fbo-1d')
add_plain_test(fbo, 'fbo-3d')
add_plain_test(fbo, 'fbo-blit')
add_plain_test(fbo, 'fbo-cubemap')
add_plain_test(fbo, 'fbo-clearmipmap')
add_plain_test(fbo, 'fbo-copypix')
add_plain_test(fbo, 'fbo-copyteximage')
add_plain_test(fbo, 'fbo-drawbuffers')
add_plain_test(fbo, 'fbo-drawbuffers2-blend')
add_plain_test(fbo, 'fbo-drawbuffers2-colormask')
add_plain_test(fbo, 'fbo-flushing')
add_plain_test(fbo, 'fbo-generatemipmap')
add_plain_test(fbo, 'fbo-generatemipmap-npot')
add_plain_test(fbo, 'fbo-generatemipmap-viewport')
add_plain_test(fbo, 'fbo-nodepth-test')
add_plain_test(fbo, 'fbo-nostencil-test')
add_plain_test(fbo, 'fbo-readdrawpix')
add_plain_test(fbo, 'fbo-readpixels')
add_plain_test(fbo, 'fbo-pbo-readpixels-small')

general = Group()
add_plain_test(general, 'bgra-sec-color-pointer')
add_plain_test(general, 'bgra-vert-attrib-pointer')
add_plain_test(general, 'clear-varray-2.0')
add_plain_test(general, 'depthrange-clear')
add_plain_test(general, 'depth_clamp')
add_plain_test(general, 'depth-clamp-range')
add_plain_test(general, 'dlist-clear')
add_plain_test(general, 'dlist-fdo3129-01')
add_plain_test(general, 'dlist-fdo3129-02')
add_plain_test(general, 'draw-elements-base-vertex')
add_plain_test(general, 'linestipple')
add_plain_test(general, 'object_purgeable-api-pbo')
add_plain_test(general, 'object_purgeable-api-texture')
add_plain_test(general, 'object_purgeable-api-vbo')
add_plain_test(general, 'occlusion_query')
add_plain_test(general, 'pbo-drawpixels')
add_plain_test(general, 'pbo-read-argb8888')
add_plain_test(general, 'pbo-readpixels-small')
add_plain_test(general, 'pbo-teximage')
add_plain_test(general, 'pbo-teximage-tiling')
add_plain_test(general, 'pbo-teximage-tiling-2')
add_plain_test(general, 'provoking-vertex')
add_plain_test(general, 'oes-read-format')
add_plain_test(general, 'read-front')
add_plain_test(general, 'scissor-bitmap')
add_plain_test(general, 'scissor-clear')
add_plain_test(general, 'scissor-copypixels')
add_plain_test(general, 'scissor-depth-clear')
add_plain_test(general, 'scissor-many')
add_plain_test(general, 'scissor-stencil-clear')
add_plain_test(general, 'stencil-drawpixels')
add_plain_test(general, 'texgen')
add_plain_test(general, 'texunits')
add_plain_test(general, 'varray-disabled')
add_plain_test(general, 'vbo-map-remap')
add_plain_test(general, 'vbo-subdata-sync')
add_plain_test(general, 'windowoverlap')
add_plain_test(general, 'sync_api')

shaders = Group()
add_plain_test(shaders, 'ati-fs-bad-delete')
add_plain_test(shaders, 'trinity-fp1')
add_plain_test(shaders, 'fp-abs-01')
add_plain_test(shaders, 'fp-abs-02')
add_plain_test(shaders, 'fp-condition_codes-01')
add_plain_test(shaders, 'fp-fog')
add_plain_test(shaders, 'fp-lit-mask')
add_plain_test(shaders, 'fp-fragment-position')
add_plain_test(shaders, 'fp-kil')
add_plain_test(shaders, 'fp-incomplete-tex')
add_plain_test(shaders, 'fp-indirections')
add_plain_test(shaders, 'fp-indirections2')
add_plain_test(shaders, 'fp-long-alu')
add_plain_test(shaders, 'fp-rfl')
add_plain_test(shaders, 'fp-set-01')
add_plain_test(shaders, 'fp-set-02')
add_plain_test(shaders, 'fp-unpack-01')
add_plain_test(shaders, 'glsl-arb-fragment-coord-conventions')
add_plain_test(shaders, 'glsl-arb-fragment-coord-conventions-define')
add_plain_test(shaders, 'glsl-bug-22603')
add_plain_test(shaders, 'glsl-dlist-getattriblocation')
add_plain_test(shaders, 'glsl-preprocessor-comments')
add_plain_test(shaders, 'glsl-reload-source')
add_plain_test(shaders, 'glsl-uniform-out-of-bounds')
add_plain_test(shaders, 'glsl-uniform-update')
add_plain_test(shaders, 'glsl-unused-varying')
add_plain_test(shaders, 'glsl-fs-bug25902')
add_plain_test(shaders, 'glsl-fs-exp2')
add_plain_test(shaders, 'glsl-fs-fragcoord')
add_plain_test(shaders, 'glsl-fs-log2')
add_plain_test(shaders, 'glsl-fs-loop')
add_plain_test(shaders, 'glsl-fs-loop-nested')
add_plain_test(shaders, 'glsl-fs-mix')
add_plain_test(shaders, 'glsl-fs-mix-constant')
add_plain_test(shaders, 'glsl-fs-sqrt-branch')
add_plain_test(shaders, 'glsl-fs-sqrt-zero')
add_plain_test(shaders, 'glsl-orangebook-ch06-bump')
add_plain_test(shaders, 'glsl-vs-arrays')
add_plain_test(shaders, 'glsl-vs-functions')
add_plain_test(shaders, 'glsl-vs-if')
add_plain_test(shaders, 'glsl-vs-if-bool')
add_plain_test(shaders, 'glsl-vs-loop')
add_plain_test(shaders, 'glsl-vs-loop-nested')
add_plain_test(shaders, 'glsl-vs-mov-after-deref')
add_plain_test(shaders, 'glsl-vs-sqrt-zero')
add_plain_test(shaders, 'vp-address-01')
add_plain_test(shaders, 'vp-address-02')
add_plain_test(shaders, 'vp-address-03')
add_plain_test(shaders, 'vp-address-04')
add_plain_test(shaders, 'vp-address-05')
add_plain_test(shaders, 'vp-address-06')
add_plain_test(shaders, 'vp-bad-program')
add_plain_test(shaders, 'vp-clipdistance-01')
add_plain_test(shaders, 'vp-clipdistance-02')
add_plain_test(shaders, 'vp-clipdistance-03')
add_plain_test(shaders, 'vp-clipdistance-04')
add_plain_test(shaders, 'vp-combined-image-units')
add_plain_test(shaders, 'vp-max-array')
add_plain_test(shaders, 'glsl-derivs')
add_plain_test(shaders, 'glsl-deriv-varyings')
add_plain_test(shaders, 'glsl-fwidth')
add_plain_test(shaders, 'glsl-lod-bias')
add_plain_test(shaders, 'vp-ignore-input')
add_plain_test(shaders, 'glsl-empty-vs-no-fs')
add_plain_test(shaders, 'glsl-useprogram-displaylist')

fpgeneric = Group()
def add_fpgeneric(name):
	fpgeneric[name] = PlainExecTest(['fp-generic', '-auto', testBinDir + '../tests/shaders/generic/' + name + '.fp'])
add_fpgeneric('dph')
add_fpgeneric('kil-swizzle')
add_fpgeneric('lrp_sat')
shaders['fp-generic'] = fpgeneric

vpfpgeneric = Group()
def add_vpfpgeneric(name):
	vpfpgeneric[name] = PlainExecTest(['vpfp-generic', '-auto', testBinDir + '../tests/shaders/generic/' + name + '.vpfp'])
add_vpfpgeneric('arl')
add_vpfpgeneric('big-param')
add_vpfpgeneric('dataflow-bug')
add_vpfpgeneric('fogcoord-dp3')
add_vpfpgeneric('fogcoord-dph')
add_vpfpgeneric('fogcoord-dp4')
add_vpfpgeneric('fp-arb-fragment-coord-conventions-none')
add_vpfpgeneric('fp-arb-fragment-coord-conventions-integer')
add_vpfpgeneric('fp-cmp')
add_vpfpgeneric('fp-two-constants')
add_vpfpgeneric('nv-mov')
add_vpfpgeneric('nv-add')
add_vpfpgeneric('nv-arl')
add_vpfpgeneric('nv-init-zero-reg')
add_vpfpgeneric('nv-init-zero-addr')
add_vpfpgeneric('vp-arl-constant-array')
add_vpfpgeneric('vp-arl-constant-array-huge')
add_vpfpgeneric('vp-arl-constant-array-huge-varying')
add_vpfpgeneric('vp-arl-constant-array-huge-offset')
add_vpfpgeneric('vp-arl-constant-array-huge-offset-neg')
add_vpfpgeneric('vp-arl-constant-array-huge-overwritten')
add_vpfpgeneric('vp-arl-constant-array-varying')
add_vpfpgeneric('vp-arl-env-array')
add_vpfpgeneric('vp-arl-local-array')
add_vpfpgeneric('vp-arl-neg-array')
add_vpfpgeneric('vp-arl-neg-array-2')
add_vpfpgeneric('vp-constant-array')
add_vpfpgeneric('vp-constant-array-huge')
add_vpfpgeneric('vp-exp-alias')
add_vpfpgeneric('vp-max')
add_vpfpgeneric('vp-min')
add_vpfpgeneric('vp-sge-alias')
add_vpfpgeneric('vp-two-constants')
shaders['vpfp-generic'] = vpfpgeneric

glslgeneric = Group()
def add_glslgeneric(name):
	glslgeneric[name] = PlainExecTest(['shader_runner', testBinDir + '../tests/shaders/generic/' + name + '.shader_test', '-auto'])
add_glslgeneric('glsl-algebraic-add-zero')
add_glslgeneric('glsl-algebraic-div-one')
add_glslgeneric('glsl-algebraic-logicand-false-2')
add_glslgeneric('glsl-algebraic-logicand-false')
add_glslgeneric('glsl-algebraic-logicand-true-2')
add_glslgeneric('glsl-algebraic-logicand-true')
add_glslgeneric('glsl-algebraic-logicor-false-2')
add_glslgeneric('glsl-algebraic-logicor-false')
add_glslgeneric('glsl-algebraic-logicor-true-2')
add_glslgeneric('glsl-algebraic-logicor-true')
add_glslgeneric('glsl-algebraic-logicxor-false')
add_glslgeneric('glsl-algebraic-logicxor-true')
add_glslgeneric('glsl-algebraic-mul-one')
add_glslgeneric('glsl-algebraic-mul-zero')
add_glslgeneric('glsl-algebraic-not-equals')
add_glslgeneric('glsl-algebraic-not-notequals')
add_glslgeneric('glsl-algebraic-pow-two')
add_glslgeneric('glsl-algebraic-rcp-rcp')
add_glslgeneric('glsl-algebraic-rcp-rsq')
add_glslgeneric('glsl-algebraic-rcp-sqrt')
add_glslgeneric('glsl-algebraic-sub-zero-2')
add_glslgeneric('glsl-algebraic-sub-zero')
shaders['glsl-generic'] = glslgeneric

bugs = Group()
add_plain_test(bugs, 'crash-cubemap-order')
add_plain_test(bugs, 'crash-texparameter-before-teximage')
add_plain_test(bugs, 'fdo9833')
add_plain_test(bugs, 'fdo10370')
add_plain_test(bugs, 'fdo14575')
add_plain_test(bugs, 'fdo20701')
add_plain_test(bugs, 'r300-readcache')
add_plain_test(bugs, 'tex1d-2dborder')
add_plain_test(bugs, 'point-sprite')
add_plain_test(bugs, 'fdo22540')
add_plain_test(bugs, 'fdo23489')
add_plain_test(bugs, 'fdo23670-depth_test')
add_plain_test(bugs, 'fdo23670-drawpix_stencil')
add_plain_test(bugs, 'fdo24066')
add_plain_test(bugs, 'fdo25614-genmipmap')

glx = Group()
add_plain_test(glx, 'glx-multithread')
add_plain_test(glx, 'glx-swap-exchange')

texturing = Group()
add_plain_test(texturing, 'array-texture')
add_plain_test(texturing, 'copytexsubimage')
add_plain_test(texturing, 'cubemap')
add_plain_test(texturing, 'depth-level-clamp')
add_plain_test(texturing, 'gen-teximage')
add_plain_test(texturing, 'gen-compressed-teximage')
add_plain_test(texturing, 'gen-nonzero-unit')
add_plain_test(texturing, 'gen-texsubimage')
add_plain_test(texturing, 'getteximage-simple')
add_plain_test(texturing, 'levelclamp')
add_plain_test(texturing, 'lodbias')
add_plain_test(texturing, 'lodclamp')
add_plain_test(texturing, 'lodclamp-between')
add_plain_test(texturing, 'lodclamp-between-max')
add_plain_test(texturing, 'rg-draw-pixels')
add_plain_test(texturing, 's3tc-teximage')
add_plain_test(texturing, 's3tc-texsubimage')
add_plain_test(texturing, 'streaming-texture-leak')
add_plain_test(texturing, 'tex-swizzle')
add_plain_test(texturing, 'tex3d')
add_plain_test(texturing, 'texdepth')
add_plain_test(texturing, 'texrect-many')
add_plain_test(texturing, 'texredefine')
add_plain_test(texturing, 'tfp')
add_plain_test(texturing, 'depth-tex-modes')
add_plain_test(texturing, 'depth-tex-modes-glsl')
add_plain_test(texturing, 'depth-tex-compare')

glslparsertest = Group()
def add_glslparsertest(shader, result):
	glslparsertest[shader] = PlainExecTest(['glslparsertest', 'tests/glslparsertest/shaders/' + shader, result])

add_glslparsertest('CorrectBuiltInOveride.frag', 'pass')
add_glslparsertest('CorrectComma.frag', 'pass')
add_glslparsertest('CorrectConstFolding1.vert', 'pass')
add_glslparsertest('CorrectConstFolding2.vert', 'pass')
add_glslparsertest('CorrectConstruct.vert', 'pass')
add_glslparsertest('CorrectExtension1.V110.frag', 'pass')
add_glslparsertest('CorrectExtension4.V110.frag', 'pass')
add_glslparsertest('CorrectExtension10.V110.frag', 'pass')
add_glslparsertest('CorrectFull.frag', 'pass')
add_glslparsertest('CorrectFull.vert', 'pass')
add_glslparsertest('CorrectFuncOverload.frag', 'pass')
add_glslparsertest('CorrectFuncOverload.vert', 'pass')
add_glslparsertest('CorrectFunction.vert', 'pass')
add_glslparsertest('CorrectFunction1.vert', 'pass')
add_glslparsertest('CorrectModule.frag', 'pass')
add_glslparsertest('CorrectMatComma.frag', 'pass')
add_glslparsertest('CorrectMatComma2.frag', 'pass')
add_glslparsertest('CorrectParse1.frag', 'pass')
add_glslparsertest('CorrectParse2.frag', 'pass')
add_glslparsertest('CorrectParse2.vert', 'pass')
add_glslparsertest('CorrectParseTest.frag', 'pass')
add_glslparsertest('CorrectParseTest1.frag', 'pass')
add_glslparsertest('CorrectPreprocess5.frag', 'pass')
add_glslparsertest('CorrectPreprocess8.frag', 'pass')
add_glslparsertest('CorrectPreprocess9.frag', 'pass')
add_glslparsertest('CorrectPreprocess11.frag', 'pass')
add_glslparsertest('CorrectSwizzle1.frag', 'pass')
add_glslparsertest('CorrectSwizzle1.vert', 'pass')
add_glslparsertest('CorrectSwizzle2.frag', 'pass')
add_glslparsertest('CorrectSwizzle2.vert', 'pass')
add_glslparsertest('CorrectSwizzle3.frag', 'pass')
add_glslparsertest('CorrectUnsizedArray.frag', 'pass')
add_glslparsertest('CorrectVersion.V110.frag', 'pass')
add_glslparsertest('CorrectVersion1.V110.frag', 'pass')
add_glslparsertest('CorrectReservedWords.frag', 'pass')
add_glslparsertest('CorrectScalarVectorExpressions.frag', 'pass')
add_glslparsertest('CGDataTypes.frag', 'fail')
add_glslparsertest('CGStandardLibrary.frag', 'fail')
add_glslparsertest('IncludeDirective.frag', 'fail')
add_glslparsertest('MainParameters.vert', 'fail')
add_glslparsertest('ConstantConversions.frag', 'fail')
add_glslparsertest('TextureRectangleSamplers.frag', 'pass')
add_glslparsertest('FunctionParam.vert', 'fail')
add_glslparsertest('ParseTest3.frag', 'fail')
add_glslparsertest('ParseTest4.frag', 'fail')
add_glslparsertest('array1.frag', 'fail')
add_glslparsertest('array10.frag', 'fail')
add_glslparsertest('array11.frag', 'fail')
add_glslparsertest('array2.frag', 'fail')
add_glslparsertest('array3.frag', 'fail')
add_glslparsertest('array4.frag', 'fail')
add_glslparsertest('array5.frag', 'fail')
add_glslparsertest('array6.frag', 'fail')
add_glslparsertest('array7.frag', 'fail')
add_glslparsertest('array8.frag', 'fail')
add_glslparsertest('array9.frag', 'fail')
add_glslparsertest('attribute.frag', 'fail')
add_glslparsertest('attribute.vert', 'fail')
add_glslparsertest('attribute1.vert', 'fail')
add_glslparsertest('attribute2.vert', 'fail')
add_glslparsertest('break.frag', 'fail')
add_glslparsertest('comma1.vert', 'fail')
add_glslparsertest('comma2.frag', 'fail')
add_glslparsertest('comma2.vert', 'fail')
add_glslparsertest('comma3.vert', 'fail')
add_glslparsertest('comment.frag', 'fail')
add_glslparsertest('conditional1.frag', 'fail')
add_glslparsertest('conditional2.frag', 'fail')
add_glslparsertest('conditional3.frag', 'fail')
add_glslparsertest('constFunc.frag', 'fail')
add_glslparsertest('constructor1.frag', 'fail')
add_glslparsertest('constructor2.frag', 'fail')
add_glslparsertest('constructor3.V110.frag', 'fail')
add_glslparsertest('continue.frag', 'fail')
add_glslparsertest('dataType1.frag', 'fail')
add_glslparsertest('dataType10.frag', 'fail')
add_glslparsertest('dataType11.frag', 'fail')
add_glslparsertest('dataType12.frag', 'fail')
add_glslparsertest('dataType13.frag', 'fail')
add_glslparsertest('dataType19.frag', 'fail')
add_glslparsertest('dataType2.frag', 'fail')
add_glslparsertest('dataType3.frag', 'fail')
add_glslparsertest('dataType4.frag', 'fail')
add_glslparsertest('dataType5.frag', 'fail')
add_glslparsertest('dataType6.frag', 'fail')
add_glslparsertest('dataType7.frag', 'fail')
add_glslparsertest('dataType8.frag', 'fail')
add_glslparsertest('dataType9.frag', 'fail')
add_glslparsertest('dowhile.frag', 'fail')
add_glslparsertest('dvec2.frag', 'fail')
add_glslparsertest('dvec3.frag', 'fail')
add_glslparsertest('dvec4.frag', 'fail')
add_glslparsertest('extension2.V110.frag', 'fail')
add_glslparsertest('extension3.V110.frag', 'fail')
add_glslparsertest('extension5.V110.frag', 'fail')
add_glslparsertest('extension6.V110.frag', 'fail')
add_glslparsertest('extension7.V110.frag', 'fail')
add_glslparsertest('extension8.V110.frag', 'fail')
add_glslparsertest('extension9.V110.frag', 'fail')
add_glslparsertest('float2.frag', 'fail')
add_glslparsertest('float3.frag', 'fail')
add_glslparsertest('float4.frag', 'fail')
add_glslparsertest('fragmentOnly.vert', 'fail')
add_glslparsertest('fragmentOnly1.vert', 'fail')
add_glslparsertest('fragmentOnly2.vert', 'fail')
add_glslparsertest('fragmentOnly3.vert', 'fail')
add_glslparsertest('fragmentOnly4.vert', 'fail')
add_glslparsertest('function1.frag', 'fail')
add_glslparsertest('function10.frag', 'fail')
add_glslparsertest('function2.V110.frag', 'fail')
add_glslparsertest('function3.frag', 'fail')
add_glslparsertest('function4.frag', 'fail')
add_glslparsertest('function5.frag', 'fail')
add_glslparsertest('function6.frag', 'fail')
add_glslparsertest('function7.frag', 'fail')
add_glslparsertest('function8.frag', 'fail')
add_glslparsertest('function9.frag', 'fail')
add_glslparsertest('hvec2.frag', 'fail')
add_glslparsertest('hvec3.frag', 'fail')
add_glslparsertest('hvec4.frag', 'fail')
add_glslparsertest('identifier1.frag', 'fail')
add_glslparsertest('identifier2.frag', 'fail')
add_glslparsertest('identifier3.frag', 'fail')
add_glslparsertest('if1.frag', 'fail')
add_glslparsertest('if2.frag', 'fail')
add_glslparsertest('increment1.frag', 'fail')
add_glslparsertest('increment2.frag', 'fail')
add_glslparsertest('increment3.frag', 'fail')
add_glslparsertest('increment4.frag', 'fail')
add_glslparsertest('increment6.frag', 'fail')
add_glslparsertest('main1.vert', 'fail')
add_glslparsertest('main2.vert', 'fail')
add_glslparsertest('main3.vert', 'fail')
add_glslparsertest('matrix.V110.frag', 'fail')
add_glslparsertest('normal.vert', 'fail')
add_glslparsertest('parser1.vert', 'fail')
add_glslparsertest('parser10.frag', 'fail')
add_glslparsertest('parser3.frag', 'fail')
add_glslparsertest('parser4.frag', 'fail')
add_glslparsertest('parser5.frag', 'fail')
add_glslparsertest('parser6.frag', 'fail')
add_glslparsertest('parser7.frag', 'fail')
add_glslparsertest('parser8.frag', 'fail')
add_glslparsertest('parser9.frag', 'fail')
add_glslparsertest('preprocess0.frag', 'fail')
add_glslparsertest('preprocess1.frag', 'fail')
add_glslparsertest('preprocess10.frag', 'fail')
add_glslparsertest('preprocess2.frag', 'fail')
add_glslparsertest('preprocess3.frag', 'fail')
add_glslparsertest('preprocess4.frag', 'fail')
add_glslparsertest('preprocess6.frag', 'fail')
add_glslparsertest('preprocess7.frag', 'fail')
add_glslparsertest('scoping1.frag', 'fail')
add_glslparsertest('scoping2.frag', 'fail')
add_glslparsertest('struct1.frag', 'fail')
add_glslparsertest('struct10.frag', 'fail')
add_glslparsertest('struct11.frag', 'fail')
add_glslparsertest('struct2.frag', 'fail')
add_glslparsertest('struct3.frag', 'fail')
add_glslparsertest('struct4.frag', 'fail')
add_glslparsertest('struct5.frag', 'fail')
add_glslparsertest('struct6.frag', 'fail')
add_glslparsertest('struct7.frag', 'fail')
add_glslparsertest('struct8.frag', 'fail')
add_glslparsertest('struct9.frag', 'fail')
add_glslparsertest('swizzle1.frag', 'fail')
add_glslparsertest('swizzle2.frag', 'fail')
add_glslparsertest('swizzle3.frag', 'fail')
add_glslparsertest('typecast.frag', 'fail')
add_glslparsertest('uniform.frag', 'fail')
add_glslparsertest('uniform1.frag', 'fail')
add_glslparsertest('varying.frag', 'fail')
add_glslparsertest('varying1.frag', 'fail')
add_glslparsertest('varying2.frag', 'fail')
add_glslparsertest('varying3.frag', 'fail')
add_glslparsertest('vector.frag', 'fail')
add_glslparsertest('version2.V110.frag', 'fail')
add_glslparsertest('version3.V110.frag', 'fail')
add_glslparsertest('vertex.vert', 'fail')
add_glslparsertest('vertexOnly.frag', 'fail')
add_glslparsertest('vertexOnly1.frag', 'fail')
add_glslparsertest('vertexOnly2.frag', 'fail')
add_glslparsertest('while.frag', 'fail')
add_glslparsertest('while1.frag', 'fail')
add_glslparsertest('while2.frag', 'fail')
add_glslparsertest('TernaryOp.frag', 'fail')

asmparsertest = Group()
def add_asmparsertest(group, shader):
	asmparsertest[group + '/' + shader] = PlainExecTest(['asmparsertest', '-auto', group, 'tests/asmparsertest/shaders/' + group + '/' + shader])

add_asmparsertest('ARBfp1.0', 'abs-01.txt')
add_asmparsertest('ARBfp1.0', 'abs-02.txt')
add_asmparsertest('ARBfp1.0', 'abs-03.txt')
add_asmparsertest('ARBfp1.0', 'condition_code-01.txt')
add_asmparsertest('ARBfp1.0', 'cos-01.txt')
add_asmparsertest('ARBfp1.0', 'cos-02.txt')
add_asmparsertest('ARBfp1.0', 'cos-03.txt')
add_asmparsertest('ARBfp1.0', 'cos-04.txt')
add_asmparsertest('ARBfp1.0', 'cos-05.txt')
add_asmparsertest('ARBfp1.0', 'ddx-01.txt')
add_asmparsertest('ARBfp1.0', 'ddx-02.txt')
add_asmparsertest('ARBfp1.0', 'ddy-01.txt')
add_asmparsertest('ARBfp1.0', 'ddy-02.txt')
add_asmparsertest('ARBfp1.0', 'depth_range-01.txt')
add_asmparsertest('ARBfp1.0', 'fog-01.txt')
add_asmparsertest('ARBfp1.0', 'fog-02.txt')
add_asmparsertest('ARBfp1.0', 'fog-03.txt')
add_asmparsertest('ARBfp1.0', 'fog-04.txt')
add_asmparsertest('ARBfp1.0', 'option-01.txt')
add_asmparsertest('ARBfp1.0', 'precision_hint-01.txt')
add_asmparsertest('ARBfp1.0', 'precision_hint-02.txt')
add_asmparsertest('ARBfp1.0', 'precision_hint-03.txt')
add_asmparsertest('ARBfp1.0', 'precision_hint-04.txt')
add_asmparsertest('ARBfp1.0', 'precision_hint-05.txt')
add_asmparsertest('ARBfp1.0', 'reserved_words-01.txt')
add_asmparsertest('ARBfp1.0', 'result-01.txt')
add_asmparsertest('ARBfp1.0', 'result-02.txt')
add_asmparsertest('ARBfp1.0', 'result-03.txt')
add_asmparsertest('ARBfp1.0', 'result-04.txt')
add_asmparsertest('ARBfp1.0', 'result-05.txt')
add_asmparsertest('ARBfp1.0', 'result-06.txt')
add_asmparsertest('ARBfp1.0', 'result-07.txt')
add_asmparsertest('ARBfp1.0', 'result-08.txt')
add_asmparsertest('ARBfp1.0', 'result-09.txt')
add_asmparsertest('ARBfp1.0', 'result-10.txt')
add_asmparsertest('ARBfp1.0', 'result-11.txt')
add_asmparsertest('ARBfp1.0', 'shadow-01.txt')
add_asmparsertest('ARBfp1.0', 'shadow-02.txt')
add_asmparsertest('ARBfp1.0', 'shadow-03.txt')
add_asmparsertest('ARBfp1.0', 'sincos-01.txt')
add_asmparsertest('ARBfp1.0', 'sincos-02.txt')
add_asmparsertest('ARBfp1.0', 'sincos-03.txt')
add_asmparsertest('ARBfp1.0', 'sincos-04.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-01.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-02.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-03.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-04.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-05.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-06.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-07.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-08.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-09.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-10.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-11.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-12.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-13.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-14.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-15.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-16.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-17.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-18.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-19.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-20.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-21.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-22.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-23.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-24.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-25.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-26.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-27.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-28.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-29.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-30.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-31.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-32.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-33.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-34.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-35.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-36.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-37.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-38.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-39.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-40.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-41.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-42.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-43.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-44.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-45.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-46.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-47.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-48.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-49.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-50.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-51.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-52.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-53.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-54.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-55.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-56.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-57.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-58.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-59.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-60.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-61.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-62.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-63.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-64.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-65.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-66.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-67.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-68.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-69.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-70.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-71.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-72.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-73.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-74.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-75.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-76.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-77.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-78.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-79.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-80.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-81.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-82.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-83.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-84.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-85.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-86.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-87.txt')
add_asmparsertest('ARBfp1.0', 'size_specifier-88.txt')
add_asmparsertest('ARBfp1.0', 'swz-01.txt')
add_asmparsertest('ARBfp1.0', 'swz-02.txt')
add_asmparsertest('ARBfp1.0', 'swz-03.txt')
add_asmparsertest('ARBfp1.0', 'swz-04.txt')
add_asmparsertest('ARBfp1.0', 'swz-05.txt')
add_asmparsertest('ARBfp1.0', 'swz-06.txt')
add_asmparsertest('ARBfp1.0', 'swz-07.txt')
add_asmparsertest('ARBfp1.0', 'txd-01.txt')
add_asmparsertest('ARBfp1.0', 'txd-02.txt')
add_asmparsertest('ARBfp1.0', 'txd-03.txt')

add_asmparsertest('ARBvp1.0', 'abs-02.txt')
add_asmparsertest('ARBvp1.0', 'abs-03.txt')
add_asmparsertest('ARBvp1.0', 'abs.txt')
add_asmparsertest('ARBvp1.0', 'address-01.txt')
add_asmparsertest('ARBvp1.0', 'address-02.txt')
add_asmparsertest('ARBvp1.0', 'address-03.txt')
add_asmparsertest('ARBvp1.0', 'address-04.txt')
add_asmparsertest('ARBvp1.0', 'address-05.txt')
add_asmparsertest('ARBvp1.0', 'address-06.txt')
add_asmparsertest('ARBvp1.0', 'address-07.txt')
add_asmparsertest('ARBvp1.0', 'address-08.txt')
add_asmparsertest('ARBvp1.0', 'address-09.txt')
add_asmparsertest('ARBvp1.0', 'address-10.txt')
add_asmparsertest('ARBvp1.0', 'address-11.txt')
add_asmparsertest('ARBvp1.0', 'add.txt')
add_asmparsertest('ARBvp1.0', 'alias-01.txt')
add_asmparsertest('ARBvp1.0', 'alias-02.txt')
add_asmparsertest('ARBvp1.0', 'all_state-01.txt')
add_asmparsertest('ARBvp1.0', 'all_state-02.txt')
add_asmparsertest('ARBvp1.0', 'all_state-03.txt')
add_asmparsertest('ARBvp1.0', 'all_state-04.txt')
add_asmparsertest('ARBvp1.0', 'all_state-05.txt')
add_asmparsertest('ARBvp1.0', 'all_state-06.txt')
add_asmparsertest('ARBvp1.0', 'all_state-07.txt')
add_asmparsertest('ARBvp1.0', 'all_state-08.txt')
add_asmparsertest('ARBvp1.0', 'all_state-09.txt')
add_asmparsertest('ARBvp1.0', 'all_state-10.txt')
add_asmparsertest('ARBvp1.0', 'all_state-11.txt')
add_asmparsertest('ARBvp1.0', 'all_state-12.txt')
add_asmparsertest('ARBvp1.0', 'all_state-13.txt')
add_asmparsertest('ARBvp1.0', 'all_state-14.txt')
add_asmparsertest('ARBvp1.0', 'all_state-15.txt')
add_asmparsertest('ARBvp1.0', 'all_state-16.txt')
add_asmparsertest('ARBvp1.0', 'all_state-17.txt')
add_asmparsertest('ARBvp1.0', 'all_state-18.txt')
add_asmparsertest('ARBvp1.0', 'ara-01.txt')
add_asmparsertest('ARBvp1.0', 'ara-02.txt')
add_asmparsertest('ARBvp1.0', 'ara-03.txt')
add_asmparsertest('ARBvp1.0', 'ara-04.txt')
add_asmparsertest('ARBvp1.0', 'arbfp.txt')
add_asmparsertest('ARBvp1.0', 'arl-01.txt')
add_asmparsertest('ARBvp1.0', 'arl-02.txt')
add_asmparsertest('ARBvp1.0', 'arl-03.txt')
add_asmparsertest('ARBvp1.0', 'arl-04.txt')
add_asmparsertest('ARBvp1.0', 'arl-05.txt')
add_asmparsertest('ARBvp1.0', 'array_range-01.txt')
add_asmparsertest('ARBvp1.0', 'array_range-02.txt')
add_asmparsertest('ARBvp1.0', 'array_range-03.txt')
add_asmparsertest('ARBvp1.0', 'array_range-04.txt')
add_asmparsertest('ARBvp1.0', 'array_range-05.txt')
add_asmparsertest('ARBvp1.0', 'array_range-06.txt')
add_asmparsertest('ARBvp1.0', 'array_range-07.txt')
add_asmparsertest('ARBvp1.0', 'astack-01.txt')
add_asmparsertest('ARBvp1.0', 'astack-02.txt')
add_asmparsertest('ARBvp1.0', 'astack-03.txt')
add_asmparsertest('ARBvp1.0', 'astack-04.txt')
add_asmparsertest('ARBvp1.0', 'astack-05.txt')
add_asmparsertest('ARBvp1.0', 'astack-06.txt')
add_asmparsertest('ARBvp1.0', 'astack-07.txt')
add_asmparsertest('ARBvp1.0', 'astack-08.txt')
add_asmparsertest('ARBvp1.0', 'astack-09.txt')
add_asmparsertest('ARBvp1.0', 'attrib-01.txt')
add_asmparsertest('ARBvp1.0', 'attrib-02.txt')
add_asmparsertest('ARBvp1.0', 'attrib-03.txt')
add_asmparsertest('ARBvp1.0', 'attrib-04.txt')
add_asmparsertest('ARBvp1.0', 'bra-01.txt')
add_asmparsertest('ARBvp1.0', 'bra-02.txt')
add_asmparsertest('ARBvp1.0', 'bra-03.txt')
add_asmparsertest('ARBvp1.0', 'clipdistance-01.txt')
add_asmparsertest('ARBvp1.0', 'clipdistance-02.txt')
add_asmparsertest('ARBvp1.0', 'clipdistance-03.txt')
add_asmparsertest('ARBvp1.0', 'clipdistance-04.txt')
add_asmparsertest('ARBvp1.0', 'cos-01.txt')
add_asmparsertest('ARBvp1.0', 'cos-02.txt')
add_asmparsertest('ARBvp1.0', 'cos-03.txt')
add_asmparsertest('ARBvp1.0', 'dp3.txt')
add_asmparsertest('ARBvp1.0', 'dp4.txt')
add_asmparsertest('ARBvp1.0', 'dph.txt')
add_asmparsertest('ARBvp1.0', 'dst.txt')
add_asmparsertest('ARBvp1.0', 'ex2.txt')
add_asmparsertest('ARBvp1.0', 'flr.txt')
add_asmparsertest('ARBvp1.0', 'frc.txt')
add_asmparsertest('ARBvp1.0', 'issue-70.txt')
add_asmparsertest('ARBvp1.0', 'issue-74.txt')
add_asmparsertest('ARBvp1.0', 'issue-75.txt')
add_asmparsertest('ARBvp1.0', 'lg2.txt')
add_asmparsertest('ARBvp1.0', 'lit.txt')
add_asmparsertest('ARBvp1.0', 'mad.txt')
add_asmparsertest('ARBvp1.0', 'matrix-01.txt')
add_asmparsertest('ARBvp1.0', 'max.txt')
add_asmparsertest('ARBvp1.0', 'min.txt')
add_asmparsertest('ARBvp1.0', 'mov.txt')
add_asmparsertest('ARBvp1.0', 'mul.txt')
add_asmparsertest('ARBvp1.0', 'numbers-01.txt')
add_asmparsertest('ARBvp1.0', 'numbers-02.txt')
add_asmparsertest('ARBvp1.0', 'numbers-03.txt')
add_asmparsertest('ARBvp1.0', 'numbers-04.txt')
add_asmparsertest('ARBvp1.0', 'numbers-05.txt')
add_asmparsertest('ARBvp1.0', 'numbers-06.txt')
add_asmparsertest('ARBvp1.0', 'numbers-07.txt')
add_asmparsertest('ARBvp1.0', 'option-01.txt')
add_asmparsertest('ARBvp1.0', 'output-01.txt')
add_asmparsertest('ARBvp1.0', 'output-02.txt')
add_asmparsertest('ARBvp1.0', 'param-01.txt')
add_asmparsertest('ARBvp1.0', 'param-02.txt')
add_asmparsertest('ARBvp1.0', 'param-03.txt')
add_asmparsertest('ARBvp1.0', 'param-04.txt')
add_asmparsertest('ARBvp1.0', 'param-05.txt')
add_asmparsertest('ARBvp1.0', 'param-06.txt')
add_asmparsertest('ARBvp1.0', 'param-07.txt')
add_asmparsertest('ARBvp1.0', 'param-08.txt')
add_asmparsertest('ARBvp1.0', 'position_invariant-01.txt')
add_asmparsertest('ARBvp1.0', 'position_invariant-02.txt')
add_asmparsertest('ARBvp1.0', 'pow.txt')
add_asmparsertest('ARBvp1.0', 'rcp-01.txt')
add_asmparsertest('ARBvp1.0', 'rcp-02.txt')
add_asmparsertest('ARBvp1.0', 'rcp-03.txt')
add_asmparsertest('ARBvp1.0', 'rcp-04.txt')
add_asmparsertest('ARBvp1.0', 'rcp-05.txt')
add_asmparsertest('ARBvp1.0', 'rcp-06.txt')
add_asmparsertest('ARBvp1.0', 'rcp-07.txt')
add_asmparsertest('ARBvp1.0', 'reserved_word-01.txt')
add_asmparsertest('ARBvp1.0', 'result-01.txt')
add_asmparsertest('ARBvp1.0', 'result-02.txt')
add_asmparsertest('ARBvp1.0', 'rsq.txt')
add_asmparsertest('ARBvp1.0', 'seq-01.txt')
add_asmparsertest('ARBvp1.0', 'seq-02.txt')
add_asmparsertest('ARBvp1.0', 'sfl-01.txt')
add_asmparsertest('ARBvp1.0', 'sfl-02.txt')
add_asmparsertest('ARBvp1.0', 'sge.txt')
add_asmparsertest('ARBvp1.0', 'sgt-01.txt')
add_asmparsertest('ARBvp1.0', 'sgt-02.txt')
add_asmparsertest('ARBvp1.0', 'sin-01.txt')
add_asmparsertest('ARBvp1.0', 'sin-02.txt')
add_asmparsertest('ARBvp1.0', 'sin-03.txt')
add_asmparsertest('ARBvp1.0', 'sle-01.txt')
add_asmparsertest('ARBvp1.0', 'sle-02.txt')
add_asmparsertest('ARBvp1.0', 'slt.txt')
add_asmparsertest('ARBvp1.0', 'sne-01.txt')
add_asmparsertest('ARBvp1.0', 'sne-02.txt')
add_asmparsertest('ARBvp1.0', 'ssg-01.txt')
add_asmparsertest('ARBvp1.0', 'ssg-02.txt')
add_asmparsertest('ARBvp1.0', 'str-01.txt')
add_asmparsertest('ARBvp1.0', 'str-02.txt')
add_asmparsertest('ARBvp1.0', 'sub.txt')
add_asmparsertest('ARBvp1.0', 'swz-01.txt')
add_asmparsertest('ARBvp1.0', 'swz-02.txt')
add_asmparsertest('ARBvp1.0', 'swz-03.txt')
add_asmparsertest('ARBvp1.0', 'swz-04.txt')
add_asmparsertest('ARBvp1.0', 'swz-05.txt')
add_asmparsertest('ARBvp1.0', 'tex-01.txt')
add_asmparsertest('ARBvp1.0', 'tex-02.txt')
add_asmparsertest('ARBvp1.0', 'tex-03.txt')
add_asmparsertest('ARBvp1.0', 'tex-04.txt')
add_asmparsertest('ARBvp1.0', 'tex-05.txt')
add_asmparsertest('ARBvp1.0', 'tex-06.txt')
add_asmparsertest('ARBvp1.0', 'tex-07.txt')
add_asmparsertest('ARBvp1.0', 'tex-08.txt')
add_asmparsertest('ARBvp1.0', 'tex-09.txt')
add_asmparsertest('ARBvp1.0', 'tex-10.txt')
add_asmparsertest('ARBvp1.0', 'tex-11.txt')
add_asmparsertest('ARBvp1.0', 'tex-12.txt')
add_asmparsertest('ARBvp1.0', 'tex-13.txt')
add_asmparsertest('ARBvp1.0', 'tex-14.txt')
add_asmparsertest('ARBvp1.0', 'tex-15.txt')
add_asmparsertest('ARBvp1.0', 'tex-16.txt')
add_asmparsertest('ARBvp1.0', 'tex-17.txt')
add_asmparsertest('ARBvp1.0', 'tex-18.txt')
add_asmparsertest('ARBvp1.0', 'tex-19.txt')
add_asmparsertest('ARBvp1.0', 'tex-20.txt')
add_asmparsertest('ARBvp1.0', 'txb-01.txt')
add_asmparsertest('ARBvp1.0', 'txb-02.txt')
add_asmparsertest('ARBvp1.0', 'txb-03.txt')
add_asmparsertest('ARBvp1.0', 'txb-04.txt')
add_asmparsertest('ARBvp1.0', 'txb-05.txt')
add_asmparsertest('ARBvp1.0', 'txb-06.txt')
add_asmparsertest('ARBvp1.0', 'txb-07.txt')
add_asmparsertest('ARBvp1.0', 'txb-08.txt')
add_asmparsertest('ARBvp1.0', 'txb-09.txt')
add_asmparsertest('ARBvp1.0', 'txb-10.txt')
add_asmparsertest('ARBvp1.0', 'txb-11.txt')
add_asmparsertest('ARBvp1.0', 'txb-12.txt')
add_asmparsertest('ARBvp1.0', 'txb-13.txt')
add_asmparsertest('ARBvp1.0', 'txb-14.txt')
add_asmparsertest('ARBvp1.0', 'txb-15.txt')
add_asmparsertest('ARBvp1.0', 'txb-16.txt')
add_asmparsertest('ARBvp1.0', 'txb-17.txt')
add_asmparsertest('ARBvp1.0', 'txb-18.txt')
add_asmparsertest('ARBvp1.0', 'txb-19.txt')
add_asmparsertest('ARBvp1.0', 'txb-20.txt')
add_asmparsertest('ARBvp1.0', 'txd-01.txt')
add_asmparsertest('ARBvp1.0', 'txd-02.txt')
add_asmparsertest('ARBvp1.0', 'txd-03.txt')
add_asmparsertest('ARBvp1.0', 'txd-04.txt')
add_asmparsertest('ARBvp1.0', 'txd-05.txt')
add_asmparsertest('ARBvp1.0', 'txd-06.txt')
add_asmparsertest('ARBvp1.0', 'txd-07.txt')
add_asmparsertest('ARBvp1.0', 'txd-08.txt')
add_asmparsertest('ARBvp1.0', 'txd-09.txt')
add_asmparsertest('ARBvp1.0', 'txd-10.txt')
add_asmparsertest('ARBvp1.0', 'txd-11.txt')
add_asmparsertest('ARBvp1.0', 'txd-12.txt')
add_asmparsertest('ARBvp1.0', 'txd-13.txt')
add_asmparsertest('ARBvp1.0', 'txd-14.txt')
add_asmparsertest('ARBvp1.0', 'txd-15.txt')
add_asmparsertest('ARBvp1.0', 'txd-16.txt')
add_asmparsertest('ARBvp1.0', 'txd-17.txt')
add_asmparsertest('ARBvp1.0', 'txd-18.txt')
add_asmparsertest('ARBvp1.0', 'txd-19.txt')
add_asmparsertest('ARBvp1.0', 'txd-20.txt')
add_asmparsertest('ARBvp1.0', 'txf-01.txt')
add_asmparsertest('ARBvp1.0', 'txf-02.txt')
add_asmparsertest('ARBvp1.0', 'txf-03.txt')
add_asmparsertest('ARBvp1.0', 'txf-04.txt')
add_asmparsertest('ARBvp1.0', 'txf-05.txt')
add_asmparsertest('ARBvp1.0', 'txf-06.txt')
add_asmparsertest('ARBvp1.0', 'txf-07.txt')
add_asmparsertest('ARBvp1.0', 'txf-08.txt')
add_asmparsertest('ARBvp1.0', 'txf-09.txt')
add_asmparsertest('ARBvp1.0', 'txf-10.txt')
add_asmparsertest('ARBvp1.0', 'txf-11.txt')
add_asmparsertest('ARBvp1.0', 'txf-12.txt')
add_asmparsertest('ARBvp1.0', 'txf-13.txt')
add_asmparsertest('ARBvp1.0', 'txf-14.txt')
add_asmparsertest('ARBvp1.0', 'txf-15.txt')
add_asmparsertest('ARBvp1.0', 'txf-16.txt')
add_asmparsertest('ARBvp1.0', 'txf-17.txt')
add_asmparsertest('ARBvp1.0', 'txf-18.txt')
add_asmparsertest('ARBvp1.0', 'txf-19.txt')
add_asmparsertest('ARBvp1.0', 'txf-20.txt')
add_asmparsertest('ARBvp1.0', 'txl-01.txt')
add_asmparsertest('ARBvp1.0', 'txl-02.txt')
add_asmparsertest('ARBvp1.0', 'txl-03.txt')
add_asmparsertest('ARBvp1.0', 'txl-04.txt')
add_asmparsertest('ARBvp1.0', 'txl-05.txt')
add_asmparsertest('ARBvp1.0', 'txl-06.txt')
add_asmparsertest('ARBvp1.0', 'txl-07.txt')
add_asmparsertest('ARBvp1.0', 'txl-08.txt')
add_asmparsertest('ARBvp1.0', 'txl-09.txt')
add_asmparsertest('ARBvp1.0', 'txl-10.txt')
add_asmparsertest('ARBvp1.0', 'txl-11.txt')
add_asmparsertest('ARBvp1.0', 'txl-12.txt')
add_asmparsertest('ARBvp1.0', 'txl-13.txt')
add_asmparsertest('ARBvp1.0', 'txl-14.txt')
add_asmparsertest('ARBvp1.0', 'txl-15.txt')
add_asmparsertest('ARBvp1.0', 'txl-16.txt')
add_asmparsertest('ARBvp1.0', 'txl-17.txt')
add_asmparsertest('ARBvp1.0', 'txl-18.txt')
add_asmparsertest('ARBvp1.0', 'txl-19.txt')
add_asmparsertest('ARBvp1.0', 'txl-20.txt')
add_asmparsertest('ARBvp1.0', 'txp-01.txt')
add_asmparsertest('ARBvp1.0', 'txp-02.txt')
add_asmparsertest('ARBvp1.0', 'txp-03.txt')
add_asmparsertest('ARBvp1.0', 'txp-04.txt')
add_asmparsertest('ARBvp1.0', 'txp-05.txt')
add_asmparsertest('ARBvp1.0', 'txp-06.txt')
add_asmparsertest('ARBvp1.0', 'txp-07.txt')
add_asmparsertest('ARBvp1.0', 'txp-08.txt')
add_asmparsertest('ARBvp1.0', 'txp-09.txt')
add_asmparsertest('ARBvp1.0', 'txp-10.txt')
add_asmparsertest('ARBvp1.0', 'txp-11.txt')
add_asmparsertest('ARBvp1.0', 'txp-12.txt')
add_asmparsertest('ARBvp1.0', 'txp-13.txt')
add_asmparsertest('ARBvp1.0', 'txp-14.txt')
add_asmparsertest('ARBvp1.0', 'txp-15.txt')
add_asmparsertest('ARBvp1.0', 'txp-16.txt')
add_asmparsertest('ARBvp1.0', 'txp-17.txt')
add_asmparsertest('ARBvp1.0', 'txp-18.txt')
add_asmparsertest('ARBvp1.0', 'txp-19.txt')
add_asmparsertest('ARBvp1.0', 'txp-20.txt')
add_asmparsertest('ARBvp1.0', 'txq-01.txt')
add_asmparsertest('ARBvp1.0', 'txq-02.txt')
add_asmparsertest('ARBvp1.0', 'txq-03.txt')
add_asmparsertest('ARBvp1.0', 'txq-04.txt')
add_asmparsertest('ARBvp1.0', 'txq-05.txt')
add_asmparsertest('ARBvp1.0', 'txq-06.txt')
add_asmparsertest('ARBvp1.0', 'txq-07.txt')
add_asmparsertest('ARBvp1.0', 'txq-08.txt')
add_asmparsertest('ARBvp1.0', 'txq-09.txt')
add_asmparsertest('ARBvp1.0', 'txq-10.txt')
add_asmparsertest('ARBvp1.0', 'txq-11.txt')
add_asmparsertest('ARBvp1.0', 'txq-12.txt')
add_asmparsertest('ARBvp1.0', 'txq-13.txt')
add_asmparsertest('ARBvp1.0', 'txq-14.txt')
add_asmparsertest('ARBvp1.0', 'txq-15.txt')
add_asmparsertest('ARBvp1.0', 'txq-16.txt')
add_asmparsertest('ARBvp1.0', 'txq-17.txt')
add_asmparsertest('ARBvp1.0', 'txq-18.txt')
add_asmparsertest('ARBvp1.0', 'txq-19.txt')
add_asmparsertest('ARBvp1.0', 'txq-20.txt')
add_asmparsertest('ARBvp1.0', 'xpd.txt')

profile.tests['bugs'] = bugs
profile.tests['general'] = general
profile.tests['fbo'] = fbo
profile.tests['glean'] = glean
profile.tests['glslparsertest'] = glslparsertest
profile.tests['asmparsertest'] = asmparsertest
profile.tests['mesa'] = mesa
profile.tests['shaders'] = shaders
profile.tests['texturing'] = texturing

#############
# Some Mesa diagnostic messages that we should probably ignore
Test.ignoreErrors.append(re.compile("couldn't open libtxc_dxtn.so"))
Test.ignoreErrors.append(re.compile("compression/decompression available"))
Test.ignoreErrors.append(re.compile("Mesa: .*build"))
Test.ignoreErrors.append(re.compile("Mesa: CPU.*"))
Test.ignoreErrors.append(re.compile("Mesa: .*cpu detected."))
Test.ignoreErrors.append(re.compile("Mesa: Test.*"))
Test.ignoreErrors.append(re.compile("Mesa: Yes.*"))
Test.ignoreErrors.append(re.compile("libGL: XF86DRIGetClientDriverName.*"))
Test.ignoreErrors.append(re.compile("libGL: OpenDriver: trying.*"))
Test.ignoreErrors.append(re.compile("libGL: Warning in.*drirc*"))
Test.ignoreErrors.append(re.compile("ATTENTION.*value of option.*"))
Test.ignoreErrors.append(re.compile("drmOpen.*"))
Test.ignoreErrors.append(re.compile("Mesa: Not testing OS support.*"))
Test.ignoreErrors.append(re.compile("Mesa: User error:.*"))
Test.ignoreErrors.append(re.compile("debug_get_.*"))

